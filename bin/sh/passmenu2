#!/usr/bin/env bash
# MIT/X Consortium License

# Â© 2021 Mario Forzanini <mario.forzanini@studenti.unimi.it>

# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
# of the Software, and to permit persons to whom the Software is furnished to do
# so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


shopt -s nullglob globstar

typeit=0
if [[ $1 == "--type" ]]; then
	typeit=1
	shift
fi


STARTDIR=${PASSWORD_STORE_DIR-~/.password-store}
BASEDIR=$STARTDIR
DONE=0
LEVEL=0
PREVSELECTION=""
SELECTION=""

while [ "$DONE" -eq 0 ] ; do
  password_files=( "$STARTDIR"/* )
  password_files=( "${password_files[@]#"$STARTDIR"/}" )
  password_files=( "${password_files[@]%.gpg}" )

  if [ "$LEVEL" -ne 0 ] ; then
    password_files=(".." "${password_files[@]}")
  fi
  entry=$(printf '%s\n' "${password_files[@]}" | dmenu "$@" -c -g 3 -l 15)

  echo "entry: $entry"
  if [ -z "$entry" ] ; then
    DONE=1
    exit
  fi

  if [ "$entry" != ".." ] ; then
    PREVSELECTION=$SELECTION
    SELECTION="$SELECTION/$entry"

    # check if another dir
    if [ -d "$STARTDIR/$entry" ] ; then
      STARTDIR="$STARTDIR/$entry"
      LEVEL=$((LEVEL+1))
    else
      # not a directory so it must be a real password entry

      if [[ $typeit -eq 0 ]]; then
        pass show -c "$SELECTION" 2>/dev/null
      else
        xdotool - <<<"type --clearmodifiers -- $(pass show "$SELECTION" | head -n 1)"
      fi
      DONE=1
    fi

  else
    LEVEL=$((LEVEL-1))
    SELECTION=$PREVSELECTION
    STARTDIR="$BASEDIR/$SELECTION"
  fi
done

